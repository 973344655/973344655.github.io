

分布式系统中，某个功能只在一台机器上执行(即，只执行一次)实现 redis 等的分布式锁， mysql锁，DB的唯一索引


注解
http://www.jiangxinlingdu.com/spring/2019/02/11/annotation.html


静态嵌套类和内部类
https://docs.oracle.com/javase/tutorial/java/javaOO/nested.html
内部类方便回调？？



RFC 2616

NIO适用场景
服务器需要支持超大量的长时间连接。比如10000个连接以上，并且每个客户端并不会频繁地发送太多数据。例如总公司的一个中心服务器需要收集全国便利店各个收银机的交易信息，只需要少量线程按需处理维护的大量长期连接。
Jetty、Mina、Netty、ZooKeeper等都是基于NIO方式实现。
BIO适用场景
适用于连接数目比较小，并且一次发送大量数据的场景，这种方式对服务器资源要求比较高，并发局限于应用中。



Properties 为什么 继承自 hashtable

hadoop
hadoop不是一种东西，而是一系列技术而形成的框架集合，如HDFS,hive,mapreduce,zookeeper,hbase等
MapReduce
分而治之的思想，将数据集  进行划分，分别进行处理，满足map中的条件(map),然后统计结果(reduce)
kafka
Broker/Topic/Partition/Producer/Consumer/Consumer Group
  Kafka集群包含一个或多个服务器，这种服务器被称为broker
  每条发布到Kafka集群的消息都有一个类别，这个类别被称为Topic（物理上不同Topic的消息分开存储[表现于日志落地]，
  逻辑上一个Topic的消息虽然保存于一个或多个broker上但用户只需指定消息的Topic即可生产或消费数据而不必关心数据存于何处）
  Parition是物理上的概念，每个Topic包含一个或多个Partition


zookeeper在该体系中的作用


块元素，选择器，属性，模仿一个静态页面

大数

BeanFactory 和 ApplicationContext


几种队列
